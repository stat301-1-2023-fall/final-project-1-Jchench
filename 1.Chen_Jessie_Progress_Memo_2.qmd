---
title: "Progress Memo 2"
subtitle: |
  | Final Project 
  | Data Science 1 with R (STAT 301-1)
author: Jessie Chen
date: today

format:
  html:
    toc: true
    embed-resources: true
    
execute:
  echo: false
  warning: false

from: markdown+emoji 
---

::: {.callout-tip icon="false"}
## Github Repo Link

[My Repo Link](https://github.com/stat301-1-2023-fall/final-project-1-Jchench)
:::

## Preliminary Data Cleaning

For this project, I'm looking at data on songs from the music streaming platform Spotify. I wanted to see if there are any inferences I could make in terms of musical characteristics and popularity, as well as explore if these elements have changed over time.

I had to do quite a bit of data cleaning because I planned on joining two datasets together so I could see the Spotify stream count for each song. For this, I initially wanted to match by the song title for each dataset, however, I noticed that a lot of songs had the same names so this wouldn't be a unique key. Instead, I ended up grouping the merged dataset by song title and artist name and summing the streams to get the variable `final_streams`, which more accurately represented the total number of streams for a song. Next, I did some variable type conversion so that the dataset would be easier to work with. I converted the song length (`time`) to seconds so that it would be easier to deal with numerically. I extracted a `primary_genre` out of `parent_genres` to make this column appear cleaner and more concise. I also extracted the song release year out of `album_date` so that it would be easier to make comparisons over time.
```{r}
library(tidyverse)
spotify_data <- read_rds("data/spotify_data_cleaned")
```

## Initial Analysis

One variable I was particularly interested in looking at was `final_streams` as an indication of popularity because it measures how many times a song is played by Spotify users. I wanted to see if there were any features that would make a song more or less popular so I looked at correlation coefficients:

```{r}
spotify_numeric <- 
  spotify_data |> 
  select(where(is.numeric))

spotify_numeric |> 
  cor(use = "pairwise.complete.obs") |> 
  as_tibble() |> 
  select(final_streams) |> 
  mutate(variables = colnames(spotify_numeric), .before = final_streams) |> 
  arrange(desc(final_streams)) |> 
  DT::datatable() |> 
  DT::formatRound(2:2, digits = 2)
```
As we can see, there aren't many numeric variables that have a significantly strong correlation with Spotify streams. It seems like the three variables that have the highest correlation coefficient with `final_streams` is `year` (year the song was released), `dance` (measure of "danceability" in percentage), and `loud` (loudness of the song in decibles). I personally think that the relationship between `final_streams` and `year` might have a lot of confounding variables since this factors isn't inherently a musical element. For example, the year a song was released might have a positive relationship with its number of streams because the app is gaining more users every year (and thus, more recent songs will have more people listening to them).

I also think that `year` could be a variable that warrants more exploration because I'm curious to see what features of popular songs have changed over time. Thus, I also looked at the correlation coefficients for `year`:
```{r}
spotify_numeric |> 
  cor(use = "pairwise.complete.obs") |> 
  as_tibble() |> 
  select(year) |> 
  mutate(variable = colnames(spotify_numeric), .before = year) |> 
  arrange(desc(year)) |> 
  DT::datatable() |> 
  DT::formatRound(2:2, digits = 3)
```
According to this table, I think the other numeric variable that would be worth looking at other than the aforementioned three from the previous exploration would be `song_seconds` (on page 2) as there seems to be a pretty strong negative correlation.

In terms of categorical variables, I think the ones that are most interesting to look at would be genre, key, and time signature. Moving forwards, I will look at the distribution of `final_streams`, `year`, `dance`, `loud`, `primary_genre`, `key`, `time_signature`, and `song_seconds`. We can take a closer look at these variables in the univariate and bivariate analyses.

## Univariate Analysis
```{r}
spotify_data_select <- 
  spotify_data |> 
  select(c(final_streams, year, dance, loud, primary_genre, key, time_signature, song_seconds))

for(var in colnames(spotify_data_select)){
  
  if (is.numeric(spotify_data_select[[var]])){
    plot <- spotify_data_select |> 
      ggplot(aes(x = !!sym(var))) +
      geom_histogram() +
      xlab(var)
  } else {
    plot <- spotify_data_select |> 
      ggplot(aes(x = !!sym(var))) +
      geom_bar() +
      xlab(var) +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))
  }
  
  ggsave(str_c("plots/", var, ".png"))
}
```

First, let's look at `final_streams`:

![The histogram distribution is unimodal and significantly skewed to the right, it seems that most songs have less than 25 million streams. There are a lot of outliers beyond 500 million streams.](plots/final_streams.png)

Next, let's look at `year`:

![The histogram distirbution is left skewed here and it seems like there are a lot of songs in this dataset from 2014, 2016, and 2017.](plots/year.png)

Next, let's looks at `dance`:

![Danceability here is measured in a percentage value for how "danceable" a song is. This histogram seems to have more or less a unimodal normal distribution with the exception of a couple outliers below 25 percent.](plots/dance.png)

Here's the plot for `key`:

![This barchart indicates that most songs tend to be in C#/Db major.](plots/key.png)

Next, let's look at `loud`:

![Loudness is measured in terms of the average decibles for a song. There are quite a few significant breaks in between the distirbution, but it looks left skewed and relatively unimodal.](plots/loud.png)

Here's the plot for `primary_genre`:

![This barchart indicates that most songs tend to be in the pop genre](plots/primary_genre.png)

Next, let's look at the plot for `song_seconds`:

![This distribution seems relatively unimodal and normal. There are a couple of outliers at around 100 seconds (1 minute 40 seconds) and beyond 375 seconds (6 minutes 15 seconds). Most songs seem to be around 225 seconds (3 minutes 45 seconds)](plots/song_seconds.png)

Lastly, let's look at `time_signature`:

![This barchart indicates that most songs tend to be in 4/4 time.](plots/time_signature.png)

**Conclusions and steps to take moving forwards:**

I think that the variables I could conduct a bivariate analysis on with `final_streams` would be `dance`, `loudness`, `song_seconds`, and `key`. I think `primary_genre` and `time_signature` could be interesting variables to facet by but I don't think doing a bivariate analysis would be as helpful since the distribution of values for these variables is quite uneven.

## Bivariate Analysis

In terms of the bivariate analysis, I think I'll first focus on variables related to `final_streams` to see if there are any meaningful relationship.

**Scatterplot analysis:**

First, let's plot the relationship between `final_streams` and `dance`:
```{r}
spotify_data |> 
  ggplot(aes(x = dance, y = final_streams)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Number of Spotify Streams vs. Danceability",
       x = "dancebility (measured in %)",
       y = "total streams")
```
We can see here that there is a relatively weak positive correlation between the total number of Spotify streams for a song and its danceability. This means that songs that are more "danceable" tend to be played somewhat more often by Spotify users.

Next, we can look at the relationship between `final_streams` and `loud`:
```{r}
spotify_data |> 
  ggplot(aes(x = loud, y = final_streams)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Number of Spotify Streams vs. Loudness",
       x = "loudness (measured in decibles)",
       y = "total streams")
```
We can also see here that there is a relatively weak positive correlation between the total number of Spotify streams for a song and its loudness. This means that songs that are louder tend to be played somewhat more often by Spotify users compared to songs that are quieter.

Finally, let's look at `song_seconds`:
```{r}
spotify_data |> 
  ggplot(aes(x = song_seconds, y = final_streams)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Number of Spotify Streams vs. Song Duration",
       x = "song duration (measured in seconds)",
       y = "total streams")
```
We can also see here that there is a relatively weak negative correlation between the total number of Spotify streams for a song and its duration. This means that songs that are shorter tend to be played somewhat more often by Spotify users.

If we recall from the initial analysis, it seems that song duration was also pretty strongly correlated with the `year` variable. So, I'll plot these two variables as well to see if they are related:
```{r}
spotify_data |> 
  ggplot(aes(x = year, y = song_seconds)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Song Duration Throughout the Years",
       x = "year",
       y = "song duration (measured in seconds)")
```
As shown in the plot above, it looks like song duration is also negatively correlated with year. This is quite interesting because it could also show a shift in musical preferences over time.

**Categorical variable boxplot:**

Let's look at `key`:
```{r}
key_boxplot <- 
  spotify_data |> 
  ggplot(aes(x = key, y = final_streams)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs("Total Number of Spotify Streams vs. Song Key",
       x = "key",
       y = "total streams")

ggsave("plots/key_box.png")
```

![](plots/key_box.png)

It looks like songs that are in the A#/Bb minor and G minor keys have the highest mean number of total streams. Songs in the A minor and D#/Eb major keys have the lowest mean number of total streams. Songs in the F#/Gb minor key seem to have the widest range and interquartile range. Songs in D#/Eb major have the smallest range.

## Next Steps

I think the next step would be to look at multivariate analyses of these variables faceted by genre and time signature. I think it would also be meaningful to cut the `year` variable into intervals and facet by this measure to see if there are any changes or additional insights that could be drawn.
